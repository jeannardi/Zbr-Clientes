<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ContextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btPDF.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>